//--------------------------------\\
//    Application-specific CSS
//---------------------------------\\

// Put all of your normal/application-specific CSS here.

hr {
	display: block;
	padding: 0;
    height: 1px;
    border: 0;
    border-top: 1px dotted currentColor;
    @include type-space-sc(margin, 1, 0);
	margin-top: -1px;
	position: relative;
}
.link_bordered{
	text-decoration: none;
	border-bottom: 1px dotted currentColor;
}
body{
	background-color: color(bg);
}
.wrap{
    @extend %bigs_nine_tenths; //90%
	@extend %smallish_eleven_twelfths; //~92%
	@include type-space-sc(padding, 1, 0, 0);
    @extend %clearfix;
    max-width: 1100px;
    margin: 0 auto;
    display: block !important;
    float: none;
}
@include mq(small){

	@include headings-scale(1.17, small);

	.wrap{
        width: 95%;
    }
}
@include mq(smallish){
	@include headings-scale(1.2, smallish);
}

.media_block{
    @extend %media_block;
    @extend %cf;
}
.box_open{
	border-width: 2px;
	margin-top: -4px;
}
.hero{
	position: relative;
	background-image: url(img/hero.jpg);
	background-size: cover;
	box-shadow: inset 0 -5em 3em rgba(color(text), .9);
	
	@include media(bigs){
		@include type-space(margin-top, -2);
	}
	@include media(lap){
		@include type-space(margin-top, -1.25);
	}
}
.hero:before{
	content: "";
	display: block;
	padding-top: 60%;
	
	@include mq(desk){
		padding-top: 47.5%;
	}
	@include mq(lap){
		padding-top: 55%;
	}
}
.hero_promise{
	width: 75%;
	background-image: url(img/promise_large.png);
	background-size: contain;
	background-repeat: no-repeat;
	background-position-y: bottom;
	position: absolute;
	bottom: 2%;
	@include type-space(height, 5);
}
.second_tier{
	border-top: 2px solid color(electric);
	margin-top: 1px;
	
	&:before{
		content: "";
		display: block;
		margin-bottom: -2px;
	}
}
.footer{
	position: relative;
	z-index: 1;
	background-image: url(img/bg_stripes.jpg);
	@extend %pad_v_2;
	border-top: 2px solid color(electric);
	box-shadow: 0 -4px 0 color(text);
}

//----Spacing Override classes---//
// Outputs spacing utility classes.

@if $breakpoint-has-spacing-classes != false {
	//Assume important and non-silent
	$spacing-config: ( important: true, silent: false );
	$spacing-config: map-extend($spacing-classes, $spacing-config, true);

	@include spacing-utilities-init(
        $breakpoints: $breakpoint-has-spacing-classes, $config: $spacing-config
    );
}

.space_n_t, 
.space_n_v {
	@extend .space_t_n;
}
.space_n_r, 
.space_n_h {
	@extend .space_r_n;
}
.space_n_b, 
.space_n_v {
	@extend .space_b_n;
}
.space_n_l, 
.space_n_h {
	@extend .space_l_n;
}

.pad_n_t, 
.pad_n_v {
	@extend .pad_t_n;
}
.pad_n_r, 
.pad_n_h {
	@extend .pad_r_n;
}
.pad_n_b, 
.pad_n_v {
	@extend .pad_b_n;
}
.pad_n_l, 
.pad_n_h {
	@extend .pad_l_n;
}